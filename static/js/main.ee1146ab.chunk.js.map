{"version":3,"sources":["components/SocialProfile/StyledProfile.js","components/Stats/StyledStats.js","components/Stats/Stats.js","components/SocialProfile/SocialProfile.js","components/Statistic/StyledStatistic.js","components/Statistic/Statistic.js","components/FriendsListItem/StyledFriendsListItem.js","components/FriendsListItem/FriendsListItem.js","components/FriendsList/StyledFriedsList.js","components/FriendsList/FriendsList.js","components/TransactionHistory/StyledTransactionHistory.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["Wrapper","styled","div","Description","Avatar","img","Name","p","Tag","Location","StatBlock","ul","StatItem","li","Label","span","Quantity","Stats","followers","views","likes","defaultProps","Profile","avatar","name","tag","location","stats","src","alt","StatisticBlock","section","Title","h2","StatList","props","bgcolor","Percent","Statistic","title","isTitled","Boolean","map","label","percentage","id","key","Math","floor","random","Item","isOnline","Status","FriendsListItem","width","StyledList","FriendsList","friends","friend","Table","table","THead","thead","TRow","tr","TableHead","TableBody","items","type","amount","currency","Transactions","App","profileData","statData","friendsData","transactionData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee1146ab.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\nfont-family: 'Lato', sans-serif;\r\n  width: 250px;\r\n  margin: 0 auto;\r\n  border-radius: 5px;\r\n  background-color: #ffffff;\r\n  box-shadow: 0px 0px 6px 2px rgb(104, 103, 103);\r\n`;\r\n\r\nconst Description = styled.div`\r\n  text-align: center;\r\n  padding-top: 30px;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 100px;\r\n  border-radius: 100px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: #122236;\r\n`;\r\n\r\nconst Tag = styled.p`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #768696;\r\n  line-height: 32px;\r\n`;\r\n\r\nconst Location = styled.p`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #768696;\r\n  line-height: 32px;\r\n`;\r\n\r\nexport {\r\n  Wrapper, \r\n  Description, \r\n  Avatar, \r\n  Name,\r\n  Tag,\r\n  Location\r\n}","import styled from 'styled-components';\r\n\r\nconst StatBlock = styled.ul`\r\n  display: grid;\r\n  list-style: none;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  background-color: #f3f6f9;\r\n  border-bottom-left-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n`;\r\n\r\nconst StatItem = styled.li`\r\n  border: 1px solid gray;\r\n  padding-bottom: 16px;\r\n\r\n  &:last-child {\r\n    border-bottom-right-radius: 5px;\r\n  }\r\n\r\n  &:first-child {\r\n    border-bottom-left-radius: 5px;\r\n  }\r\n`;\r\n\r\nconst Label = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  color: #768696;\r\n  line-height: 20px;\r\n`;\r\n\r\nconst Quantity = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #1f3349;\r\n  line-height: 20px;\r\n`;\r\n\r\nexport {\r\n  StatBlock,\r\n  StatItem,\r\n  Label,\r\n  Quantity\r\n}","import React from 'react';\r\n\r\nimport {\r\n  StatBlock,\r\n  StatItem,\r\n  Label,\r\n  Quantity\r\n} from './StyledStats';\r\n\r\nconst Stats = ({followers, views, likes}) => (\r\n  <StatBlock>\r\n  <StatItem>\r\n    <Label>Followers</Label>\r\n    <Quantity>{followers}</Quantity>\r\n  </StatItem>\r\n  <StatItem>\r\n    <Label>Views</Label>\r\n    <Quantity>{views}</Quantity>\r\n  </StatItem>\r\n  <StatItem>\r\n    <Label>Likes</Label>\r\n    <Quantity>{likes}</Quantity>\r\n  </StatItem>\r\n</StatBlock>\r\n);\r\n\r\nStats.defaultProps = {\r\n  followers: 0,\r\n  views: 0,\r\n  likes: 0\r\n}\r\n\r\nexport default Stats;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Wrapper, \r\n  Description, \r\n  Avatar, \r\n  Name,\r\n  Tag,\r\n  Location\r\n} \r\nfrom './StyledProfile';\r\nimport Stats from '../Stats/Stats';\r\n\r\nconst Profile = ({avatar, name, tag, location, stats}) => (\r\n  <Wrapper>\r\n    <Description>\r\n      <Avatar\r\n        src={avatar}\r\n        alt=\"user avatar\"\r\n      />\r\n      <Name>{name}</Name>\r\n      <Tag>@{tag}</Tag>\r\n      <Location>{location}</Location>\r\n    </Description>\r\n\r\n    <Stats {...stats} />\r\n  </Wrapper>\r\n);\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.exact({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired\r\n  })\r\n}\r\n\r\nexport default Profile","import styled from 'styled-components';\r\n\r\nconst StatisticBlock = styled.section`\r\n  width: 270px;\r\n  background-color: #ffffff;\r\n  font-family: serif;\r\n  box-shadow: 0px 0px 3px 2px #0000ff;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 16px;\r\n  color: #475965;\r\n  line-height: 70px;\r\n  height: 70px;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n`;\r\n\r\nconst StatList = styled.ul`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: stretch;\r\n  list-style: none;\r\n`;\r\n\r\nconst StatItem = styled.li`\r\n  width: auto;\r\n  background-color: ${props => props.bgcolor};\r\n`;\r\n\r\nconst Label = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  line-height: 20px;\r\n  font-size: 12px;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Percent = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  line-height: 40px;\r\n  font-size: 18px;\r\n  color: #ffffff;\r\n`;\r\n\r\nexport {\r\n  StatisticBlock,\r\n  Title,\r\n  StatList,\r\n  StatItem,\r\n  Label,\r\n  Percent\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  StatisticBlock,\r\n  Title,\r\n  StatList,\r\n  StatItem,\r\n  Label,\r\n  Percent\r\n} from './StyledStatistic';\r\n\r\nconst randomColor = function () {\r\n  return `rgb(${Math.floor(Math.random()*(256-180)+180)}, ${Math.floor(Math.random()*(256-180)+180)}, ${Math.floor(Math.random()*(256-180)+180)})`;\r\n}\r\n\r\nconst Statistic = ({ title, stats }) => {\r\n  const isTitled = Boolean(title);\r\n  return (\r\n  <StatisticBlock>\r\n  {isTitled && (<Title>{title}</Title>)}\r\n  <StatList>\r\n    {stats.map(({label, percentage, id}) => (\r\n    <StatItem key = {id} bgcolor = {randomColor()}>\r\n      <Label>{label}</Label>\r\n      <Percent>{percentage}%</Percent>\r\n    </StatItem>\r\n    ))}\r\n  </StatList>\r\n</StatisticBlock>\r\n)};\r\n\r\nStatistic.defaultProps = {\r\n  title: \"\"\r\n};\r\n\r\nStatistic.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(PropTypes.exact({\r\n    id: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired\r\n  })).isRequired\r\n}\r\n\r\nexport default Statistic","import styled from 'styled-components';\r\n\r\nconst Item = styled.li`\r\n  display: flex;\r\n  background-color: #ffffff;\r\n  box-shadow: 0px 2px 3px 2px #808080;\r\n  flex-flow: row;\r\n  width: 200px;\r\n  margin: 5px auto;\r\n  padding: 5px 0 5px 0;\r\n  align-items: center;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 3px 3px 2px ${({ isOnline }) => (isOnline ? 'rgb(50, 255, 50)' : 'rgb(255, 50, 50)' )};\r\n  }\r\n`;\r\n\r\nconst Status = styled.span`\r\n  display: block;\r\n  width: 10px;\r\n  height: 10px;\r\n  content: \"\";\r\n  background-color: ${({ isOnline }) => (isOnline ? 'rgb(0, 255, 0)' : 'rgb(255, 0, 0)' )};\r\n  border-radius: 50%;\r\n  margin: 0 6px;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  border-radius: 7%;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 16px;\r\n  padding-left: 8px;\r\n`;\r\n\r\nexport {\r\n  Item,\r\n  Status,\r\n  Avatar,\r\n  Name\r\n}","import React from 'react';\r\nimport {\r\n  Item,\r\n  Status,\r\n  Avatar,\r\n  Name\r\n} from './StyledFriendsListItem';\r\n\r\nconst FriendsListItem = (({avatar, name, isOnline}) => (\r\n    <Item isOnline = {isOnline}>\r\n      <Status isOnline = {isOnline}></Status>\r\n      <Avatar src={avatar} alt={name} width=\"48\" />\r\n      <Name>{name}</Name>\r\n    </Item>\r\n    )\r\n)\r\n\r\nexport {FriendsListItem}","import styled from 'styled-components';\r\n\r\nconst StyledList = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nexport {\r\n  StyledList\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {FriendsListItem} from '../FriendsListItem/FriendsListItem';\r\nimport {StyledList} from './StyledFriedsList';\r\n\r\nconst FriendsList = ({friends}) => (\r\n  <StyledList>\r\n    {friends.map((friend) => (<FriendsListItem key={friend.id} {...friend} />))}\r\n  </StyledList>\r\n)\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired\r\n    })\r\n  )\r\n}\r\n\r\nexport {FriendsList}","import styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  width: 500px;\r\n  margin: 0 auto;\r\n  box-shadow: 0px 3px 3px 2px #aaaaaa\r\n`;\r\n\r\nconst THead = styled.thead`\r\n  background-color: #00bcd4;\r\n  color: #ffffff;\r\n  font-size: 13px;\r\n  line-height: 50px;\r\n  text-transform: uppercase;\r\n  font-family: \"Helvetica Neue\", Helvetica, sans-serif;\r\n`;\r\n\r\nconst TRow = styled.tr`\r\n  color: #5c6975;\r\n  font-size: 15px;\r\n  line-height: 50px;\r\n  text-transform: capitalize;\r\n  font-family: \"Helvetica Neue\", Helvetica, sans-serif;\r\n  text-align: center;\r\n\r\n  &:nth-child(2n) {\r\n    background-color: #ecf2f3;\r\n  }\r\n`;\r\n\r\nexport {\r\n  Table,\r\n  THead,\r\n  TRow\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Table,\r\n  THead,\r\n  TRow\r\n} from './StyledTransactionHistory';\r\n\r\nconst TableHead = () => (\r\n  <THead>\r\n    <tr>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </THead>\r\n);\r\n\r\nconst TableBody = ({items}) => (\r\n  <tbody>\r\n    {items.map(({id, type, amount, currency}) => (\r\n    <TRow key = {id}>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </TRow>\r\n    ))}\r\n  </tbody>\r\n)\r\n\r\nconst Transactions = ({items}) => (\r\n  <Table>\r\n    <TableHead></TableHead>\r\n    <TableBody items = {items}></TableBody>\r\n  </Table>\r\n);\r\n\r\nTransactions.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired\r\n    })).isRequired\r\n}\r\n\r\nexport {Transactions}","import React from 'react';\n\nimport Profile from './components/SocialProfile/SocialProfile';\nimport Statistic from './components/Statistic/Statistic';\nimport {FriendsList} from './components/FriendsList/FriendsList';\nimport {Transactions} from './components/TransactionHistory/TransactionHistory';\n\nimport statData from './data/statistical-data.json';\nimport friendsData from './data/friends.json';\nimport transactionData from './data/transactions.json';\nimport profileData from './data/user.json';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Profile {...profileData} />\n      <Statistic title = \"Uploads\" stats = {statData} />\n      <FriendsList friends = {friendsData} />\n      <Transactions items = {transactionData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}