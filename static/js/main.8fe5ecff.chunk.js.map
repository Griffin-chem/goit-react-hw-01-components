{"version":3,"sources":["components/socialProfile/styledProfile.js","components/stats/styledStats.js","components/stats/stats.js","components/socialProfile/socialProfile.js","components/statistic/styledStatistic.js","components/statistic/statistic.js","components/friendsListItem/styledFriendsListItem.js","components/friendsListItem/friendsListItem.js","components/friendsList/styledFriedsList.js","components/friendsList/friendsList.js","components/transactionHistory/styledTransactionHistory.js","components/transactionHistory/transactionHistory.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","Description","Avatar","img","Name","p","Tag","Location","StatBlock","ul","StatItem","li","Label","span","Quantity","Stats","followers","views","likes","defaultProps","Profile","avatar","name","tag","location","stats","src","alt","StatisticBlock","section","Title","h2","StatList","props","bgcolor","Percent","randomColor","Math","floor","random","console","log","Statistic","title","map","label","percentage","id","key","Item","isOnline","Status","FriendsListItem","width","StyledList","FriendsList","friends","friend","Table","table","THead","thead","TRow","tr","TableHead","TableBody","items","type","amount","currency","Transactions","App","profileData","statData","friendsData","transactionData","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8fe5ecff.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\nfont-family: 'Lato', sans-serif;\r\n  width: 250px;\r\n  margin: 0 auto;\r\n  border-radius: 5px;\r\n  background-color: #ffffff;\r\n  box-shadow: 0px 0px 6px 2px rgb(104, 103, 103);\r\n`;\r\n\r\nconst Description = styled.div`\r\n  text-align: center;\r\n  padding-top: 30px;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  width: 100px;\r\n  border-radius: 100px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: #122236;\r\n`;\r\n\r\nconst Tag = styled.p`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #768696;\r\n  line-height: 32px;\r\n`;\r\n\r\nconst Location = styled.p`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #768696;\r\n  line-height: 32px;\r\n`;\r\n\r\nexport {\r\n  Wrapper, \r\n  Description, \r\n  Avatar, \r\n  Name,\r\n  Tag,\r\n  Location\r\n}","import styled from 'styled-components';\r\n\r\nconst StatBlock = styled.ul`\r\n  display: grid;\r\n  list-style: none;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  background-color: #f3f6f9;\r\n  border-bottom-left-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n`;\r\n\r\nconst StatItem = styled.li`\r\n  border: 1px solid gray;\r\n  padding-bottom: 16px;\r\n\r\n  &:last-child {\r\n    border-bottom-right-radius: 5px;\r\n  }\r\n\r\n  &:first-child {\r\n    border-bottom-left-radius: 5px;\r\n  }\r\n`;\r\n\r\nconst Label = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  color: #768696;\r\n  line-height: 20px;\r\n`;\r\n\r\nconst Quantity = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #1f3349;\r\n  line-height: 20px;\r\n`;\r\n\r\nexport {\r\n  StatBlock,\r\n  StatItem,\r\n  Label,\r\n  Quantity\r\n}","import React from 'react';\r\nimport {\r\n  StatBlock,\r\n  StatItem,\r\n  Label,\r\n  Quantity\r\n} from './styledStats';\r\n\r\nconst Stats = ({followers, views, likes}) => (\r\n  <StatBlock>\r\n  <StatItem>\r\n    <Label>Followers</Label>\r\n    <Quantity>{followers}</Quantity>\r\n  </StatItem>\r\n  <StatItem>\r\n    <Label>Views</Label>\r\n    <Quantity>{views}</Quantity>\r\n  </StatItem>\r\n  <StatItem>\r\n    <Label>Likes</Label>\r\n    <Quantity>{likes}</Quantity>\r\n  </StatItem>\r\n</StatBlock>\r\n);\r\n\r\nStats.defaultProps = {\r\n  followers: 0,\r\n  views: 0,\r\n  likes: 0\r\n}\r\n\r\nexport default Stats;","import React from 'react';\r\nimport {\r\n  Wrapper, \r\n  Description, \r\n  Avatar, \r\n  Name,\r\n  Tag,\r\n  Location\r\n} \r\nfrom './styledProfile';\r\nimport Stats from '../stats/stats';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profile = ({avatar, name, tag, location, stats}) => (\r\n  <Wrapper>\r\n    <Description>\r\n      <Avatar\r\n        src={avatar}\r\n        alt=\"user avatar\"\r\n      />\r\n      <Name>{name}</Name>\r\n      <Tag>@{tag}</Tag>\r\n      <Location>{location}</Location>\r\n    </Description>\r\n\r\n    <Stats {...stats} />\r\n  </Wrapper>\r\n);\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.exact({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired\r\n  })\r\n}\r\n\r\nexport default Profile","import styled from 'styled-components';\r\n\r\nconst StatisticBlock = styled.section`\r\n  width: 270px;\r\n  background-color: #ffffff;\r\n  font-family: serif;\r\n  box-shadow: 0px 0px 3px 2px #0000ff;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 16px;\r\n  color: #475965;\r\n  line-height: 70px;\r\n  height: 70px;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n`;\r\n\r\nconst StatList = styled.ul`\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: stretch;\r\n  list-style: none;\r\n`;\r\n\r\nconst StatItem = styled.li`\r\n  width: auto;\r\n  background-color: ${props => props.bgcolor};\r\n`;\r\n\r\nconst Label = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  line-height: 20px;\r\n  font-size: 12px;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Percent = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  line-height: 40px;\r\n  font-size: 18px;\r\n  color: #ffffff;\r\n`;\r\n\r\nexport {\r\n  StatisticBlock,\r\n  Title,\r\n  StatList,\r\n  StatItem,\r\n  Label,\r\n  Percent\r\n}","import React from 'react';\r\nimport {\r\n  StatisticBlock,\r\n  Title,\r\n  StatList,\r\n  StatItem,\r\n  Label,\r\n  Percent\r\n} from './styledStatistic';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst randomColor = function () {\r\n  return `rgb(${Math.floor(Math.random()*256)}, ${Math.floor(Math.random()*256)}, ${Math.floor(Math.random()*256)})`;\r\n}\r\n\r\nconsole.log(randomColor());\r\n\r\nconst Statistic = ({ title, stats }) => (\r\n  <StatisticBlock>\r\n  {title && (<Title>{title}</Title>)}\r\n  <StatList>\r\n    {stats.map(({label, percentage, id}) => (\r\n    <StatItem key = {id} bgcolor = {randomColor()}>\r\n      <Label>{label}</Label>\r\n      <Percent>{percentage}%</Percent>\r\n    </StatItem>\r\n    ))}\r\n  </StatList>\r\n</StatisticBlock>\r\n);\r\n\r\nStatistic.defaultProps = {\r\n  title: \"\"\r\n};\r\n\r\nconsole.log(StatItem);\r\n\r\nStatistic.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(PropTypes.exact({\r\n    id: PropTypes.string,\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired\r\n  })).isRequired\r\n}\r\n\r\nexport default Statistic","import styled from 'styled-components';\r\n\r\nconst Item = styled.li`\r\n  display: flex;\r\n  background-color: #ffffff;\r\n  box-shadow: 0px 2px 3px 2px #808080;\r\n  flex-flow: row;\r\n  width: 200px;\r\n  margin: 5px auto;\r\n  padding: 5px 0 5px 0;\r\n  align-items: center;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 3px 3px 2px ${props => (props.isOnline ? 'rgb(50, 255, 50)' : 'rgb(255, 50, 50)' )};\r\n  }\r\n`;\r\n\r\nconst Status = styled.span`\r\n  display: block;\r\n  width: 10px;\r\n  height: 10px;\r\n  content: \"\";\r\n  background-color: ${props => (props.isOnline ? 'rgb(0, 255, 0)' : 'rgb(255, 0, 0)' )};\r\n  border-radius: 50%;\r\n  margin: 0 6px;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n  border-radius: 7%;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 16px;\r\n  padding-left: 8px;\r\n`;\r\n\r\nexport {\r\n  Item,\r\n  Status,\r\n  Avatar,\r\n  Name\r\n}","import React from 'react';\r\nimport {\r\n  Item,\r\n  Status,\r\n  Avatar,\r\n  Name\r\n} from './styledFriendsListItem';\r\n\r\nconst FriendsListItem = (({avatar, name, isOnline}) => (\r\n    <Item isOnline = {isOnline}>\r\n      <Status isOnline = {isOnline}></Status>\r\n      <Avatar src={avatar} alt={name} width=\"48\" />\r\n      <Name>{name}</Name>\r\n    </Item>\r\n    )\r\n)\r\n\r\nexport {FriendsListItem}","import styled from 'styled-components';\r\n\r\nconst StyledList = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nexport {\r\n  StyledList\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FriendsListItem} from '../friendsListItem/friendsListItem';\r\nimport {StyledList} from './styledFriedsList';\r\n\r\nconst FriendsList = ({friends}) => (\r\n  <StyledList>\r\n    {friends.map((friend) => (<FriendsListItem key = {friend.id} {...friend} />))}\r\n  </StyledList>\r\n)\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired\r\n    })\r\n  )\r\n}\r\n\r\nexport {FriendsList}","import styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  width: 500px;\r\n  margin: 0 auto;\r\n  box-shadow: 0px 3px 3px 2px #aaaaaa\r\n`;\r\n\r\nconst THead = styled.thead`\r\n  background-color: #00bcd4;\r\n  color: #ffffff;\r\n  font-size: 13px;\r\n  line-height: 50px;\r\n  text-transform: uppercase;\r\n  font-family: \"Helvetica Neue\", Helvetica, sans-serif;\r\n`;\r\n\r\nconst TRow = styled.tr`\r\n  color: #5c6975;\r\n  font-size: 15px;\r\n  line-height: 50px;\r\n  text-transform: capitalize;\r\n  font-family: \"Helvetica Neue\", Helvetica, sans-serif;\r\n  text-align: center;\r\n\r\n  &:nth-child(2n) {\r\n    background-color: #ecf2f3;\r\n  }\r\n`;\r\n\r\nexport {\r\n  Table,\r\n  THead,\r\n  TRow\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Table,\r\n  THead,\r\n  TRow\r\n} from './styledTransactionHistory';\r\n\r\nconst TableHead = () => (\r\n  <THead>\r\n    <tr>\r\n      <th>Type</th>\r\n      <th>Amount</th>\r\n      <th>Currency</th>\r\n    </tr>\r\n  </THead>\r\n);\r\n\r\nconst TableBody = ({items}) => (\r\n  <tbody>\r\n    {items.map(({id, type, amount, currency}) => (\r\n    <TRow key = {id}>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </TRow>\r\n    ))}\r\n  </tbody>\r\n)\r\n\r\nconst Transactions = ({items}) => (\r\n  <Table>\r\n    <TableHead></TableHead>\r\n    <TableBody items = {items}></TableBody>\r\n  </Table>\r\n);\r\n\r\nTransactions.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired\r\n    })).isRequired\r\n}\r\n\r\nexport {Transactions}","import React from 'react';\nimport './App.css';\nimport Profile from './components/socialProfile/socialProfile';\nimport profileData from './data/user.json';\n\nimport Statistic from './components/statistic/statistic';\nimport statData from './data/statistical-data.json';\n\nimport {FriendsList} from './components/friendsList/friendsList';\nimport friendsData from './data/friends.json';\n\nimport transactionData from './data/transactions.json';\nimport {Transactions} from './components/transactionHistory/transactionHistory';\n\nfunction App() {\n  return (\n    <div>\n      <Profile {...profileData} />\n      <Statistic title = \"Uploads\" stats = {statData} />\n      <FriendsList friends = {friendsData} />\n      <Transactions items = {transactionData} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}